name: ci

on:
  push:
    branches:
      - main # Set a branch to deploy asd
  pull_request:

jobs:
  deploy:
    runs-on: [self-hosted]

    steps:
      - uses: actions/checkout@v2

      - name: Install apt packages
        run: |
          sudo apt-get install -y \
            build-essential cmake libtool autoconf \
            python3.7 python3-pip python3.7-venv \
            rabbitmq-server librabbitmq4 librabbitmq-dev \
            hugo

      - name: Installation python packages
        run: |
          python3 -m pip install --upgrade pip
          # export LD_LIBRARY_PATH=${HOME}/dependencies/lib:$LD_LIBRARY_PATH
          # export TA_LIBRARY_PATH=${HOME}/dependencies/lib
          # export TA_INCLUDE_PATH=${HOME}/dependencies/include
          python3 -m pip install -r requirements.txt
          # pip install -e . # Install a project in editable mode (i.e. setuptools "develop mode")

      - name: Configure and Restart Celery
        run: |
          echo "TODO: Configure and Restart Celery"
          echo "https://docs.celeryproject.org/en/stable/userguide/daemonizing.html#usage-systemd"
          echo PWD: $PWD
          cat ./config/test.txt

      - name: Configure and Broker API for Flower access
        run: |
          echo "TODO: Configure Broker API for Flower"
          echo "https://flower.readthedocs.io/en/latest/config.html#broker-api"

      - name: Configure and Restart Flower
        run: |
          echo "TODO: Configure and Restart Flower"

      - name: Install caddy
        run: |
          echo "TODO: Install Caddy"

      # TEST

      - name: Run tests with pytest # run ci
        run: pytest

      # DOCS

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"
          # extended: true

      - name: Build
        working-directory: ./docs
        run: hugo --minify -d ../public

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
